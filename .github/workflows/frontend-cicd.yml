# .github/workflows/frontend-cicd.yml

name: Build and Push Frontend to ACR

# This workflow runs on any push to the main branch
on:
  push:
    branches: [ "main" ]
    # CRITICAL FIX: The path is now case-sensitive and points to the correct folder.
    paths:
      - 'Frontend/my-app/**'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checks out the repository
      - name: Checkout repository
        uses: actions/checkout@v4 # Updated to the latest version

      # Step 2: Log in to Azure (optional if you have separate ACR credentials)
      - name: 'Az CLI login'
        uses: azure/login@v2 # Updated to the latest version
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Log in to Azure Container Registry (ACR)
      # This is the modern, recommended action for logging into ACR.
      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }} # You'll need to add this secret
          password: ${{ secrets.ACR_PASSWORD }} # You'll need to add this secret

      # Step 4: Build and push the Docker image with unique tag
      - name: Build and push image to ACR
        uses: docker/build-push-action@v5
        with:
          context: ./Frontend/my-app # Correct build context
          push: true
          tags: |
            ${{ secrets.ACR_NAME }}.azurecr.io/om-main-website/frontend:${{ github.sha }}

      # Step 5: Update App Service to use the new image tag
      - name: Update App Service with new image
        run: |
          az webapp config container set --name om-mainwbsite-frontend-2025 \
            --resource-group oatmeal-main-website \
            --container-image-name ${{ secrets.ACR_NAME }}.azurecr.io/om-main-website/frontend:${{ github.sha }}